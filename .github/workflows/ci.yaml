name: CI/CD Pipeline

on:
  push:
    branches:
      - master
      - feature-deploy-ci
  pull_request:
    branches:
      - master

jobs: 
  build-image:
    runs-on: ubuntu-latest
    env:
      NACOS_URL: ${{ secrets.NACOS_URL }}
    steps:
    - name: checkout code
      uses: actions/checkout@v2

    - name: setup docker buildx
      uses: docker/setup-buildx-action@v1

    - name: login docker hub
      uses: docker/login-action@v1
      with:
        registry: "ccr.ccs.tencentyun.com"
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: install docker compose
      run: |
        sudo apt-get update
        sudo apt-get install -y docker-compose

    - name: install config 
      run: | 
        mkdir -p ./internal/achobeta-svc-api/config
        curl --request GET \
          --url "${NACOS_URL}achobeta-svc-namespace-api-config" \
          -H "accept: application/json" \
          -H "Content-Type: application/json" \
          | jq -r '.data' > ./internal/achobeta-svc-api/config/config.yaml
        
        mkdir -p ./internal/achobeta-svc-authz/config
        curl --request GET \
          --url "${NACOS_URL}achobeta-svc-namespace-authz-config" \
          -H "accept: application/json" \
          -H "Content-Type: application/json" \
          | jq -r '.data' > ./internal/achobeta-svc-authz/config/config.yaml

    - name: docker compose build and push
      run: |
        make install proto build
        docker-compose build
        docker-compose push

    - name: set k8s context
      uses: azure/k8s-set-context@v1
      with:
        kubeconfig: ${{ secrets.KUBE_CONFIG }}

  deploy:
    runs-on: ubuntu-latest
    needs: build-image
    steps:
    - name: checkout code
      uses: actions/checkout@v2

    - name: deploy to kubernetes
      uses: actions-hub/kubectl@master
      env:
        KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
      with:
        args: rollout restart deployment achobeta-svc-authz achobeta-svc-api -n achobeta-svc
